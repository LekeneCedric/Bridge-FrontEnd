{"version":3,"file":"src_app_services_medias_medias_service_ts.js","mappings":"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","sources":["./src/app/services/medias/medias.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MediasService {\n\n  constructor(private http:HttpClient) { }\n  public getOneMedia(id:number){\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    'Authorization': `Bearer ${localStorage.getItem('token')}`,\n    'Accept': 'application/json, text/plain, */*',\n    'X-Requested-With': 'XMLHttpRequest'\n    });\n    const api = environment.apiURL+`/medias/${id}`;\n    return this.http.get<any>(api,{headers:headers});\n  }\n  public uploadImageProfil(token:string,credential:any): Promise<any>{\n   \n    console.log(credential.files)\n    return new Promise<any>(async (resolve, reject) => {\n              const res = await fetch(credential.files.data);\n              const blob = await res.blob();\n              const formData = new FormData();\n              formData.append('file',blob, credential.files.path);\n              formData.append('donateur_id',credential.donateur_id);\n                this.uploadData(formData,token).toPromise().then(\n                  data=>{\n                    resolve('success')\n                  }\n                );\n    });\n  }\n\n  public uploadImageDon(token:string,credential:any): Promise<any>{\n   \n    console.log(credential.files)\n    return new Promise<any>((resolve, reject) => {\n        try{\n          var i = 0 ;\n          var max = credential.files.length;\n          credential.files.forEach(async file=>{\n              \n              const res = await fetch(file.data);\n              const blob = await res.blob();\n              const formData = new FormData();\n                 \n              formData.append('file',blob, file.path);\n              formData.append('don_id',credential.don_id);\n              setTimeout(()=>{\n                this.uploadData(formData,token).toPromise().then(\n                  data=>{\n                    i +=1;\n                    console.log(`image ${i} uploaded successfully`)\n                    i>=max?resolve('success'):null;\n                  }\n                );\n              },3000)\n                \n            }\n          );\n          \n        }catch(err){\n          reject(err);\n        }\n    });\n  }\n  public uploadImageAssoBesoinDon(token:string,credential:any): Promise<any>{\n  //  creation don en reponse a un besoin d'une association\n    console.log(credential.files)\n    return new Promise<any>((resolve, reject) => {\n        try{\n          var i = 0 ;\n          var max = credential.files.length;\n          credential.files.forEach(async file=>{\n              \n              const res = await fetch(file.data);\n              const blob = await res.blob();\n              const formData = new FormData();\n                 \n              formData.append('file',blob, file.path);\n              formData.append('asso_don_id',credential.asso_don_id);\n              setTimeout(()=>{\n                this.uploadData(formData,token).toPromise().then(\n                  data=>{\n                    i +=1;\n                    console.log(`image ${i} uploaded successfully`)\n                    i>=max?resolve('success'):null;\n                  }\n                );\n              },3000)\n                \n            }\n          );\n          \n        }catch(err){\n          reject(err);\n        }\n    });\n  }\n  public uploadImageAssociation(token:string,credential:any): Promise<any>{\n   \n    console.log(credential.files)\n    return new Promise<any>((resolve, reject) => {\n        try{\n          var i = 0 ;\n          var max = credential.files.length;\n          credential.files.forEach(async file=>{\n              \n              const res = await fetch(file.data);\n              const blob = await res.blob();\n              const formData = new FormData();\n                 \n              formData.append('file',blob, file.path);\n              formData.append('association_id',credential.association_id);\n              setTimeout(()=>{\n                this.uploadData(formData,token).toPromise().then(\n                  data=>{\n                    i +=1;\n                    console.log(`image ${i} uploaded successfully`)\n                    i>=max?resolve('success'):null;\n                  }\n                );\n              },3000)\n                \n            }\n          );\n          \n        }catch(err){\n          reject(err);\n        }\n    });\n  }\n\n  public uploadImageMouvement(token:string,credential:any): Promise<any>{\n   \n    console.log(credential.files)\n    return new Promise<any>((resolve, reject) => {\n        try{\n          var i = 0 ;\n          var max = credential.files.length;\n          credential.files.forEach(async file=>{\n              \n              const res = await fetch(file.data);\n              const blob = await res.blob();\n              const formData = new FormData();\n                 \n              formData.append('file',blob, file.path);\n              formData.append('mouvement_id',credential.mouvement_id);\n              setTimeout(()=>{\n                this.uploadData(formData,token).toPromise().then(\n                  data=>{\n                    i +=1;\n                    console.log(`image ${i} uploaded successfully`)\n                    i>=max?resolve('success'):null;\n                  }\n                );\n              },3000)\n                \n            }\n          );\n          \n        }catch(err){\n          reject(err);\n        }\n    });\n  }\n  public uploadImageAnnonce(token:string,credential:any): Promise<any>{\n   \n    console.log(credential.files)\n    return new Promise<any>((resolve, reject) => {\n        try{\n          var i = 0 ;\n          var max = credential.files.length;\n          credential.files.forEach(async file=>{\n              \n              const res = await fetch(file.data);\n              const blob = await res.blob();\n              const formData = new FormData();\n              formData.append('file',blob, file.path);\n              formData.append('annonce_id',credential.annonce_id);\n              setTimeout(()=>{\n                this.uploadData(formData,token).toPromise().then(\n                  data=>{\n                    i +=1;\n                    console.log(`image ${i} uploaded successfully`)\n                    i>=max?resolve('success'):null;\n                  }\n                );\n              },3000)\n                \n            }\n          );\n          \n        }catch(err){\n          reject(err);\n        }\n    });\n  }\n\n  uploadData(formData,token):Observable<any>{\n    const api = environment.apiURL+'/medias';\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    });\n     return this.http.post(api,formData)\n  }\n \n}\n"],"names":["HttpClient","HttpHeaders","Injectable","environment","MediasService","constructor","http","getOneMedia","id","headers","localStorage","getItem","api","apiURL","get","uploadImageProfil","token","credential","console","log","files","Promise","resolve","reject","res","fetch","data","blob","formData","FormData","append","path","donateur_id","uploadData","toPromise","then","uploadImageDon","i","max","length","forEach","file","don_id","setTimeout","err","uploadImageAssoBesoinDon","asso_don_id","uploadImageAssociation","association_id","uploadImageMouvement","mouvement_id","uploadImageAnnonce","annonce_id","post","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}