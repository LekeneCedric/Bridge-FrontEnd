{"version":3,"file":"src_app_pages_settings_mes-associations_mes-associations_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEO;AAE9D,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAmB;KAC/B;CACF,CAAC;IAMW,gCAAgC,SAAhC,gCAAgC;CAAG;AAAnC,gCAAgC;IAJ5C,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,gCAAgC,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBJ;AACM;AACF;AAEA;AAEwC;AAEvB;IAWjD,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IATrC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,8FAAgC;SACjC;QACD,YAAY,EAAE,CAAC,uEAAmB,CAAC;KACpC,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;ACnBY;AACT;AAC4C;AAC1B;IAO9C,mBAAmB,SAAnB,mBAAmB;IAE9B,YAAoB,MAAa,EAAS,iBAAmC;QAAzD,WAAM,GAAN,MAAM,CAAO;QAAS,sBAAiB,GAAjB,iBAAiB,CAAkB;QAgB7E,uEAAuE;QACvE,SAAI,GAAQ,IAAI,CAAC;QACV,YAAO,GAAG,6EAAmB,CAAC;QACrC,iBAAY,GAAO,EAAE,CAAC;IAnB2D,CAAC;IAElF,QAAQ;QACN,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;QAC1D,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,CAAC,SAAS,EAAE,CAAC,IAAI,CACvD,IAAI,GAAE;YACJ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACnB,CAAC,CACF;QACD,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACpD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SAC/B;IACL,CAAC;IAMD,sEAAsE;IACtE,IAAI,EAAE;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,EAAC,EAAC,UAAU,EAAC,IAAI,EAAC,CAAC,CAAC;QAC9D,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QACpD,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SAC/B;IACL,CAAC;CAEF;;YA3CQ,mDAAM;YACN,+FAAiB;;AAQb,mBAAmB;IAL/B,wDAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,6EAA2C;;KAE5C,CAAC;GACW,mBAAmB,CAkC/B;AAlC+B","sources":["./src/app/pages/settings/mes-associations/mes-associations-routing.module.ts","./src/app/pages/settings/mes-associations/mes-associations.module.ts","./src/app/pages/settings/mes-associations/mes-associations.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MesAssociationsPage } from './mes-associations.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MesAssociationsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MesAssociationsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MesAssociationsPageRoutingModule } from './mes-associations-routing.module';\n\nimport { MesAssociationsPage } from './mes-associations.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MesAssociationsPageRoutingModule\n  ],\n  declarations: [MesAssociationsPage]\n})\nexport class MesAssociationsPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ManageDataService } from 'src/app/services/manage-data/manage-data.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-mes-associations',\n  templateUrl: './mes-associations.page.html',\n  styleUrls: ['./mes-associations.page.scss'],\n})\nexport class MesAssociationsPage implements OnInit {\n\n  constructor(private router:Router,private manageDataService:ManageDataService) { }\n\n  ngOnInit() {\n    this.myId = JSON.parse(localStorage.getItem('mydata')).id;\n    this.manageDataService.getAssociations().toPromise().then(\n      data=>{\n        this.associations = data;\n        console.log(data)\n      }\n    )\n    const tabBar = document.getElementById('app-tab-bar');\n      if (tabBar !== null) {\n        tabBar.style.display = 'none';\n      }\n  }\n\n  /*---------------------------VARIABLES-------------------------------*/\n  myId:number=null;\n  public storage = environment.storage;\n  associations:any[]=[];\n  /*----------------------------FUNCTIONS-----------------------------*/\n  get Id(){\n    return this.myId;\n  }\n  navBack(){\n    this.router.navigateByUrl('/menu/settings',{replaceUrl:true});\n    const tabBar = document.getElementById('app-tab-bar');\n      if (tabBar !== null) {\n        tabBar.style.display = 'flex';\n      }\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}