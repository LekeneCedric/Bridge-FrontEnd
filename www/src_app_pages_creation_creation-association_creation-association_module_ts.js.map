{"version":3,"file":"src_app_pages_creation_creation-association_creation-association_module_ts.js","mappings":"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","sources":["./src/app/pages/creation/creation-association/creation-association-routing.module.ts","./src/app/pages/creation/creation-association/creation-association.module.ts","./src/app/pages/creation/creation-association/creation-association.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CreationAssociationPage } from './creation-association.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreationAssociationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CreationAssociationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CreationAssociationPageRoutingModule } from './creation-association-routing.module';\n\nimport { CreationAssociationPage } from './creation-association.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    CreationAssociationPageRoutingModule\n  ],\n  declarations: [CreationAssociationPage]\n})\nexport class CreationAssociationPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NativeGeocoder, NativeGeocoderResult } from '@ionic-native/native-geocoder/ngx';\nimport { ActionSheetController, NavController, ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-creation-association',\n  templateUrl: './creation-association.page.html',\n  styleUrls: ['./creation-association.page.scss'],\n})\nexport class CreationAssociationPage implements OnInit {\n\n  constructor(private route:Router,private router:NavController,private http:HttpClient,\n    private actionSheetController:ActionSheetController,private nativGeocoder:NativeGeocoder,\n    private toast:ToastController) { }\n\n  ngOnInit() {\n    this.http.get<any>('assets/country_dial_info.json').toPromise().then(\n      res=>{\n          this.pays=res;\n          this.pays_temp = this.pays;\n          console.log(this.pays)\n          \n      }\n    ).finally(()=>{\n     this.http.get<any>('assets/country_city.json').toPromise().then(\n      res=>{\n          this.ville = res;\n          console.log(this.ville)\n        \n      }\n     )\n    })\n  }\n\n  navBack(){\n    this.router.back();\n  }\n  /*--------------------------_VARIABLES------------------------ */\n  MyGeocoder:NativeGeocoderResult;\n  GeocoderOption:any={useLocale: true,maxResults: 5};\n  myCoordinate:GeolocationPosition;\n  pays :any[] = [];\n  pays_temp:any[] = [];\n  ville:any[]=[];\n  ville_temp:any[] = [];\n  associationName:string='';\n  associationCreatorName:string='';\n  contactAssociation:string='';\n  codeContactAssociation:string='';\n  paysAssociation:string='';\n  villeAssociation:string='';\n  adresseAssociation:string='';\n  numeroContribuable:string='';\n  password:string='';\n  passwordConfirmation:string='';\n  longitudeAssociation:number;\n  latitudeAssociation:number;\n  password_input_type:string = 'password';\n  password_confirm_input_type:string = 'password';\n\n  /*--------------------------FUCNTIONS--------------------------*/  \n public  passwordMatching():boolean{\n    const password = this.password;\n    const passwordConf = this.passwordConfirmation;\n    return true ? password == passwordConf : false;\n    }\n  public changePassInputType(){\n    this.password_input_type == 'password'?this.password_input_type='text':this.password_input_type=\"password\"\n  }\n  public changePassConfirmInputType(){\n    this.password_confirm_input_type == 'password'?this.password_confirm_input_type='text':\n    this.password_confirm_input_type=\"password\";\n  }\n  async locationSheet(){\n    const actionsheet = await this.actionSheetController.create({\n      buttons:[\n      {\n        text:'Ma position',\n        handler:()=>{\n          this.longitudeAssociation = this.myCoordinate.coords.longitude;\n          this.latitudeAssociation = this.myCoordinate.coords.latitude;\n          this.nativGeocoder.reverseGeocode(this.latitudeAssociation, this.longitudeAssociation,this.GeocoderOption).then(\n            (result:NativeGeocoderResult[])=>{\n              this.MyGeocoder=result[0];\n              this.adresseAssociation = this.MyGeocoder.subLocality+\".\"+this.MyGeocoder.locality+\".\"+this.MyGeocoder.administrativeArea+\".\"+this.MyGeocoder.countryName;\n              console.log(JSON.stringify(result[0]));\n            }\n          ).catch(async err=>{\n            const toast = this.toast.create({\n              message:`${err}`,\n              icon: 'information-circle',\n              duration:1000,\n              color:\"danger\"\n            });\n            (await (toast)).present(); \n            console.log('Error in reverse geocode');\n          });\n        }\n      },\n      {\n        text:'open Map',\n        handler:()=>{\n          this.longitudeAssociation = null;\n          this.latitudeAssociation = null;\n        }\n      }\n    ]\n    });\n    await actionsheet.present();\n  }\n  filterPays(event:any) {\n    this.pays = this.pays_temp;\n    let keyword =event.target.value\n    if (!keyword) { return false; }\n    this.pays = this.pays.filter((value)=>{\n      return value.name === keyword\n    })\n    this.codeContactAssociation = this.pays[0].dial_code;\n    this.filterVille(keyword)\n }\n filterVille(country:string){\n  this.ville_temp=this.ville[`${country}`];\n  console.log(this.ville_temp)\n }\n}\n"],"names":["HttpClient","Component","Router","NativeGeocoder","ActionSheetController","NavController","ToastController","CreationAssociationPage","constructor","route","router","http","actionSheetController","nativGeocoder","toast","useLocale","maxResults","ngOnInit","get","toPromise","then","res","pays","pays_temp","console","log","finally","ville","navBack","back","passwordMatching","password","passwordConf","passwordConfirmation","changePassInputType","password_input_type","changePassConfirmInputType","password_confirm_input_type","locationSheet","actionsheet","create","buttons","text","handler","longitudeAssociation","myCoordinate","coords","longitude","latitudeAssociation","latitude","reverseGeocode","GeocoderOption","result","MyGeocoder","adresseAssociation","subLocality","locality","administrativeArea","countryName","JSON","stringify","catch","err","message","icon","duration","color","present","filterPays","event","keyword","target","value","filter","name","codeContactAssociation","dial_code","filterVille","country","ville_temp","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}