{"version":3,"file":"src_app_pages_auth_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACmB;AAErB;AAEmB;AAEvB;IAY5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,yEAAsB;SACvB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB5B;AACA;AACA;AACA;AACA;IAOaO,SAAS,SAATA,SAAS;EAEpBC,YAAoBC,EAApB,EAA2CC,WAA3C,EACUC,iBADV,EACsDC,KADtD,EAEUC,MAFV,EAEuB;IAFH;IAAuB;IACjC;IAA4C;IAC5C;IA0BV,sBAAyB,KAAzB;IACA,2BAA6B,UAA7B;EA3B4B;;EAEtBC,QAAQ;IAAA;;IAAA;MACZ,KAAI,CAACC,UAAL,GAAkB,KAAI,CAACN,EAAL,CAAQO,KAAR,CAAc;QAC9BC,KAAK,EAAC,CAAC,EAAD,EAAI,CAACf,+DAAD,EAAqBA,4DAArB,CAAJ,CADwB;QAE9BiB,QAAQ,EAAC,CAAC,EAAD,EAAI,CAACjB,+DAAD,EAAqBA,gEAAA,CAAqB,CAArB,CAArB,CAAJ;MAFqB,CAAd,CAAlB;;MAIA,IAAGmB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,EAA2CC,IAA9C,EACA;QACEC,OAAO,CAACC,GAAR,CAAY,cAAZ;QACA,MAAMC,KAAK,GAAGL,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;QACA,KAAI,CAACd,WAAL,CAAiBmB,UAAjB,CAA4BD,KAA5B,EAAmCE,SAAnC,GAA+CC,IAA/C,CACEC,IAAI,IAAE;UACJ,KAAI,CAACnB,MAAL,CAAYoB,aAAZ,CAA0B,YAA1B,EAAuC;YAACC,UAAU,EAAC;UAAZ,CAAvC;QACD,CAHH,EAIEC,KAJF,CAIQC,GAAG,IAAE;UACXV,OAAO,CAACC,GAAR,CAAY,cAAZ;QACD,CAND;MAOD,CAXD,MAYI,CAEH;IAnBW;EAqBb;EAMD;;;EACaU,MAAM;IAAA;;IAAA;MACjB,MAAMC,OAAO,SAAS,MAAI,CAAC3B,iBAAL,CAAuB4B,MAAvB,CAA8B;QAClDC,OAAO,EAAE,aADyC;QAElDC,OAAO,EAAE,gBAFyC;QAGlDC,WAAW,EAAE,IAHqC;QAIlDC,QAAQ,EAAE;MAJwC,CAA9B,CAAtB;MAMA,MAAML,OAAO,CAACM,OAAR,EAAN;MACA,MAAM7B,UAAU,GAAG;QACjBE,KAAK,EAAC,MAAI,CAACA,KAAL,CAAW4B,KADA;QAEjB1B,QAAQ,EAAC,MAAI,CAACA,QAAL,CAAc0B;MAFN,CAAnB;;MAIA,MAAI,CAACnC,WAAL,CAAiBoC,MAAjB,CAAwB/B,UAAxB,EAAoCe,SAApC,GAAgDC,IAAhD;QAAA,iKACC,WAAMC,IAAN,EAAY;UACXN,OAAO,CAACC,GAAR,CAAYK,IAAZ;UACAT,YAAY,CAACwB,OAAb,CAAqB,OAArB,EAA6Bf,IAAI,CAACJ,KAAlC;UACAL,YAAY,CAACwB,OAAb,CAAqB,QAArB,EAA8B1B,IAAI,CAAC2B,SAAL,CAAgBhB,IAAI,CAACiB,IAArB,CAA9B;UACAvB,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,EAA2CC,IAAvD;UACAa,OAAO,CAACY,OAAR,GALW,CAMX;;UACA,MAAMtC,KAAK,GAAG,MAAI,CAACA,KAAL,CAAW2B,MAAX,CAAkB;YAC9BE,OAAO,EAAC,GAAGT,IAAI,CAACS,OAAO,EADO;YAE9BU,IAAI,EAAE,oBAFwB;YAG9BC,QAAQ,EAAC,IAHqB;YAI9BC,KAAK,EAAC;UAJwB,CAAlB,CAAd;;UAMA,OAAQzC,KAAR,EAAgBgC,OAAhB;;UACI,MAAI,CAAC/B,MAAL,CAAYoB,aAAZ,CAA0B,YAA1B,EAAuC;YAACC,UAAU,EAAC;UAAZ,CAAvC;QACH,CAhBH;;QAAA;UAAA;QAAA;MAAA,KAiBEC,KAjBF;QAAA,kKAiBQ,WAAMC,GAAN,EAAW;UACjBV,OAAO,CAACC,GAAR,CAAYS,GAAZ;UACEE,OAAO,CAACY,OAAR;;UACA,MAAMtC,KAAK,GAAG,MAAI,CAACA,KAAL,CAAW2B,MAAX,CAAkB;YAC9BE,OAAO,EAAC,GAAGL,GAAG,CAACkB,KAAJ,CAAUb,OAAO,EADE;YAE9BU,IAAI,EAAE,OAFwB;YAG9BC,QAAQ,EAAC,IAHqB;YAI9BC,KAAK,EAAC;UAJwB,CAAlB,CAAd;;UAMA,OAAQzC,KAAR,EAAgBgC,OAAhB;QACH,CA3BD;;QAAA;UAAA;QAAA;MAAA;IAZiB;EAwClB;;EACMW,cAAc;IACnB,KAAKC,cAAL,GAAsB,CAAC,KAAKA,cAA5B;EACD;;EACMC,mBAAmB;IACxB,KAAKC,mBAAL,IAA4B,UAA5B,GAAuC,KAAKA,mBAAL,GAAyB,MAAhE,GAAuE,KAAKA,mBAAL,GAAyB,UAAhG;EACD;;EACQ,IAALzC,KAAK;IAAG,OAAO,KAAKF,UAAL,CAAgB4C,GAAhB,CAAoB,OAApB,CAAP;EAAqC;;EACrC,IAARxC,QAAQ;IAAG,OAAO,KAAKJ,UAAL,CAAgB4C,GAAhB,CAAoB,UAApB,CAAP;EAAwC;;AAlFnC;;;QAVb1D,uDAAWA;;QAGXK,2EAAWA;;QADXF,6DAAiBA;;QAAEC,2DAAeA;;QADlCF,mDAAMA;;;AASFI,SAAS,sDALrBP,wDAAS,CAAC;EACT4D,QAAQ,EAAE,WADD;EAETC,UAAAA,wDAFS;;AAAA,CAAD,CAKY,GAATtD,SAAS,CAAT","sources":["./src/app/pages/auth/login/login-routing.module.ts","./src/app/pages/auth/login/login.module.ts","./src/app/pages/auth/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  constructor(private fb:FormBuilder,private authService:AuthService,\n    private loadingController:LoadingController,private toast:ToastController,\n    private router:Router) { }\n\n  async ngOnInit() {\n    this.credential = this.fb.group({\n      email:['',[Validators.required,Validators.email]],\n      password:['',[Validators.required,Validators.minLength(6)]],\n    })\n    if(JSON.parse(localStorage.getItem('mydata')).name)\n    {\n      console.log('user present')\n      const token = localStorage.getItem('token');\n      this.authService.validToken(token).toPromise().then(\n        data=>{\n          this.router.navigateByUrl('/menu/dons',{replaceUrl:true});\n        }\n      ).catch(err=>{\n        console.log('invalidToken');\n      });\n    }\n    else{\n\n    }\n    \n  }\n  /*-----------------------------VARIABLES-----------------------------------------------*/\n  credential:FormGroup;\n  term_condition:boolean = false;\n  password_input_type:string = 'password';\n\n  /*-----------------------------FUNCTIONS-----------------------------------------------*/\n  public async signIN(){\n    const loading = await this.loadingController.create({\n      spinner: 'lines-small',\n      message: 'Please wait...',\n      translucent: true,\n      cssClass: 'custom-class custom-loading',\n    });\n    await loading.present();\n    const credential = { \n      email:this.email.value,\n      password:this.password.value,\n    }\n    this.authService.signIn(credential).toPromise().then(\n     async data=>{\n      console.log(data)\n      localStorage.setItem('token',data.token);\n      localStorage.setItem('mydata',JSON.stringify( data.user));\n      console.log(JSON.parse(localStorage.getItem('mydata')).name);\n      loading.dismiss();\n      //on affiche un message de success\n      const toast = this.toast.create({\n        message:`${data.message}`,\n        icon: 'information-circle',\n        duration:1000,\n        color:\"success\"\n      });\n      (await (toast)).present();  \n          this.router.navigateByUrl('/menu/dons',{replaceUrl:true});\n      }\n    ).catch(async err=>{\n      console.log(err)\n        loading.dismiss();\n        const toast = this.toast.create({\n          message:`${err.error.message}`,\n          icon: 'alert',\n          duration:1000,\n          color:\"danger\"\n        });\n        (await (toast)).present();  \n    })\n  }\n  public validcondition(){\n    this.term_condition = !this.term_condition;\n  }\n  public changePassInputType(){\n    this.password_input_type == 'password'?this.password_input_type='text':this.password_input_type=\"password\"\n  }\n  get email(){return this.credential.get('email');}\n  get password(){return this.credential.get('password');}\n}\n"],"names":["Component","FormBuilder","Validators","Router","LoadingController","ToastController","AuthService","LoginPage","constructor","fb","authService","loadingController","toast","router","ngOnInit","credential","group","email","required","password","minLength","JSON","parse","localStorage","getItem","name","console","log","token","validToken","toPromise","then","data","navigateByUrl","replaceUrl","catch","err","signIN","loading","create","spinner","message","translucent","cssClass","present","value","signIn","setItem","stringify","user","dismiss","icon","duration","color","error","validcondition","term_condition","changePassInputType","password_input_type","get","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}